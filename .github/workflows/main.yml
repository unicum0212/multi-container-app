name: deploy-multi-container-app
env:
  EB_APP_NAME: "multi-docker"
  EB_ENV_NAME: "docker-prod"
  AWS_REGION_NAME: "eu-central-1"
  EB_PACKAGE_S3_BUCKET_NAME: "elasticbeanstalk-eu-central-1-648494430292"

on:
  push:
    branches: 
      - main
      
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repo
        uses: actions/checkout@v1
        
      - run: docker build -t flawwwless/react-test -f ./client/Dockerfile.dev ./client
      - run: docker run -e CI=true flawwwless/react-test npm test
      
  build_and_push_images:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Git clone repo
        uses: actions/checkout@v1
      
      - run: docker build -t flawwwless/multi-client ./client
      - run: docker build -t flawwwless/multi-nginx ./nginx
      - run: docker build -t flawwwless/multi-server ./server
      - run: docker build -t flawwwless/multi-worker ./worker
      # Log in to the docker CLI
      - name: Login to dockerhub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      # Take those images and push them to docker hub
      - run: docker push flawwwless/multi-client
      - run: docker push flawwwless/multi-nginx
      - run: docker push flawwwless/multi-server
      - run: docker push flawwwless/multi-worker

  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_push_images]
    steps:
      - name: Git clone repo
        uses: actions/checkout@v2

      - name: Generate deployment package
        run: zip deploy.zip docker-compose.yml

      - name: Deploy to EB  
        uses: einaregilsson/beanstalk-deploy@v18
        with: 
          aws_access_key      : ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key      : ${{ secrets.AWS_SECRET_KEY }}
          application_name    : ${{ env.EB_APP_NAME }}
          environment_name    : ${{ env.EB_ENV_NAME }}
          existing_bucket_name: ${{ env.EB_PACKAGE_S3_BUCKET_NAME }}
          region              : ${{ env.AWS_REGION_NAME }}
          version_label       : ${{ github.sha }}
          deployment_package  : deploy.zip
